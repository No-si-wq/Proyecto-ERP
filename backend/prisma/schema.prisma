generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---- Modelos/Tablas ----
model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  username    String
  role        String   @default("USER")
  createdAt   DateTime @default(now())
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  rtn       String
  email     String?  @unique
  phone     String?
  address   String?
  invoices  Invoice[]
  createdAt DateTime @default(now())
}

model Supplier {
  id        Int      @id @default(autoincrement())
  name      String
  rtn       String
  email     String?  @unique
  phone     String?
  address   String?
  purchases Purchase[]
  createdAt DateTime @default(now())
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  sku           String          @unique
  price         Float
  quantity      Int             @default(0)
  categoryId    Int?
  category      Category?       @relation(fields: [categoryId], references: [id])
  createdAt     DateTime        @default(now())
  invoiceItems  InvoiceItem[]
  purchaseItems PurchaseItem[]
}

model Invoice {
  id              Int           @id @default(autoincrement())
  folio           String        @unique    // <-- Nuevo campo
  client          Client        @relation(fields: [clientId], references: [id])
  clientId        Int
  total           Float
  importeRecibido Float?
  cambio          Float?
  formasPago      Json?
  createdAt       DateTime      @default(now())
  items           InvoiceItem[]
}

model InvoiceItem {
  id         Int      @id @default(autoincrement())
  invoice    Invoice  @relation(fields: [invoiceId], references: [id])
  invoiceId  Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
  price      Float
  subtotal   Float

  @@index([invoiceId])
  @@index([productId])
}

model Purchase {
  id            Int            @id @default(autoincrement())
  supplier      Supplier       @relation(fields: [supplierId], references: [id])
  supplierId    Int
  total         Float
  createdAt     DateTime       @default(now())
  items         PurchaseItem[]
}

model PurchaseItem {
  id          Int       @id @default(autoincrement())
  purchase    Purchase  @relation(fields: [purchaseId], references: [id])
  purchaseId  Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  quantity    Int
  price       Float
  subtotal    Float

  @@index([purchaseId])
  @@index([productId])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[] // RelaciÃ³n con productos
  createdAt DateTime  @default(now())
}